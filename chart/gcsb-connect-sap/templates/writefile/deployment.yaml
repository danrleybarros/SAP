{{ $fullname := include "gcsb-connect-sap.fullname" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gcsb-connect-sap.fullname" . }}-writefile
  labels:
    {{- include "gcsb-connect-sap.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gcsb-connect-sap.selectorLabels-writefile" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.writefile.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gcsb-connect-sap.selectorLabels-writefile" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gcsb-connect-sap.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.writefile.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-writefile
          securityContext:
            {{- toYaml .Values.writefile.securityContext | nindent 12 }}
          image: "{{ .Values.writefile.image.repository }}:{{ .Values.writefile.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.writefile.image.pullPolicy }}
          envFrom:
            {{- range $secret := .Values.writefile.secretsBase}}
            - secretRef:
                name: {{$secret}}
            {{- end}}
            {{- range $secret := .Values.writefile.secrets}}
            - secretRef:
                name: {{ $fullname }}-{{$secret}}
            {{- end}}
          env:
          {{- with .Values.writefile.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.writefile.basepath }}
            - name: BASE_PATH
              value: {{ . }}
          {{- end }}
          # ports:
          #   - name: http
          #     containerPort: 80
          #     protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: http
        
          volumeMounts:
          {{- range $pvc := .Values.writefile.volumeMounts }}
            - name: pvc-{{ $pvc.name }}
              mountPath: {{ $pvc.mountPath }}
          {{- end }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      {{- with .Values.persistence }}
        - name: pvc-{{.name}}
          persistentVolumeClaim: 
            claimName: {{ $fullname }}-{{ .name }}
      {{- end }}
      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
