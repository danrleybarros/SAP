// <auto-generated />
using System;
using Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20201112222428_AddNewColumsOnTableFinancialAccount")]
    partial class AddNewColumsOnTableFinancialAccount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.BillFeedDoc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("AccountCreationDate");

                    b.Property<DateTime?>("ActivationDate");

                    b.Property<string>("Activity");

                    b.Property<string>("AdabasCode");

                    b.Property<string>("AffiliateCode")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("BillFrom");

                    b.Property<DateTime?>("BillTo");

                    b.Property<string>("BillingCity");

                    b.Property<string>("BillingComplement");

                    b.Property<string>("BillingCountry");

                    b.Property<string>("BillingCountryCode");

                    b.Property<string>("BillingCycle");

                    b.Property<string>("BillingNeighbourhood");

                    b.Property<string>("BillingNumber");

                    b.Property<string>("BillingPhoneNumber");

                    b.Property<string>("BillingStateOrProvince");

                    b.Property<string>("BillingStreet");

                    b.Property<string>("BillingZIPcode");

                    b.Property<string>("ChargeType");

                    b.Property<string>("CityHallServiceDescription")
                        .HasMaxLength(150);

                    b.Property<string>("CityServiceCode")
                        .HasMaxLength(10);

                    b.Property<string>("CnpjMarketPlace");

                    b.Property<string>("CommentsCredited");

                    b.Property<string>("CompanyCode")
                        .HasMaxLength(10);

                    b.Property<string>("CompanyName");

                    b.Property<string>("CompanyNameMarketPlace");

                    b.Property<string>("CpfUserHasMadeCredit");

                    b.Property<string>("CustomerAcronym");

                    b.Property<string>("CustomerCNPJ");

                    b.Property<string>("CustomerCPF");

                    b.Property<string>("CustomerCode");

                    b.Property<string>("CustomerEmailAddress");

                    b.Property<string>("CustomerPhoneNumber");

                    b.Property<string>("CustomerStateRegistration");

                    b.Property<string>("CustomerTransactionCurrency");

                    b.Property<DateTime?>("CycleCode");

                    b.Property<DateTime?>("CycleReference");

                    b.Property<DateTime?>("DueDate");

                    b.Property<string>("FinancialStatus");

                    b.Property<string>("FirstName");

                    b.Property<double?>("GrandTotalRetailPrice");

                    b.Property<double?>("GrandTotalVendorPrice");

                    b.Property<double?>("GrandTotalWholesalePrice");

                    b.Property<decimal?>("GrossRetailPrice");

                    b.Property<double?>("GrossWholesalePrice");

                    b.Property<Guid>("IdFile");

                    b.Property<string>("IndividualInvoice")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("InvoiceCreationDate");

                    b.Property<string>("InvoiceNumber");

                    b.Property<string>("InvoiceStatus");

                    b.Property<string>("LastName");

                    b.Property<string>("MailingCity");

                    b.Property<string>("MailingComplement");

                    b.Property<string>("MailingCountry");

                    b.Property<string>("MailingCountryCode");

                    b.Property<string>("MailingNeighbourhood");

                    b.Property<string>("MailingNumber");

                    b.Property<string>("MailingPhoneNumber");

                    b.Property<string>("MailingStateOrProvince");

                    b.Property<string>("MailingStreet");

                    b.Property<string>("MailingZIPcode");

                    b.Property<string>("Marketplace");

                    b.Property<string>("MarketplaceCity");

                    b.Property<string>("MarketplaceState");

                    b.Property<string>("MunicipalTaxpayerRegistration")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("NextRenewalDate");

                    b.Property<string>("OfferCode");

                    b.Property<string>("OfferName");

                    b.Property<string>("OpportunityId");

                    b.Property<DateTime?>("OrderCreationDate");

                    b.Property<string>("OrderId");

                    b.Property<string>("PaymentMethod");

                    b.Property<string>("PaymentStatus");

                    b.Property<string>("Premeditateddefaulter");

                    b.Property<double?>("ProRateScale");

                    b.Property<double?>("ProRatedRetailPriceUnitPrice");

                    b.Property<double?>("ProRatedRetailUnitDiscountedPriceAmount");

                    b.Property<double?>("ProRatedVendorUnitPrice");

                    b.Property<double?>("ProRatedWholesaleUnitDiscountedPriceAmount");

                    b.Property<double?>("ProRatedWholesaleUnitPrice");

                    b.Property<string>("PromotionCode");

                    b.Property<string>("PromotionDuration");

                    b.Property<string>("ProposalNumber");

                    b.Property<string>("ProrateOnCancellation");

                    b.Property<string>("ProrateType");

                    b.Property<DateTime?>("PurchaseDate");

                    b.Property<double?>("Qty");

                    b.Property<string>("QuoteId");

                    b.Property<string>("Receivable");

                    b.Property<string>("RefundAmount");

                    b.Property<string>("RefundType");

                    b.Property<string>("ResellerContactName");

                    b.Property<string>("ResellerEmailAddress");

                    b.Property<string>("ResellerName");

                    b.Property<string>("ResellerPhoneNumber");

                    b.Property<string>("ResourceId");

                    b.Property<double?>("RetailPriceDiscount");

                    b.Property<double?>("RetailUnitPrice");

                    b.Property<string>("SalesReferenceCode");

                    b.Property<string>("Segment");

                    b.Property<Guid>("Sequence");

                    b.Property<string>("ServiceCancellationDate");

                    b.Property<string>("ServiceCode");

                    b.Property<string>("ServiceName");

                    b.Property<string>("ServiceType");

                    b.Property<string>("SpecialProcedureNumber")
                        .HasMaxLength(150);

                    b.Property<string>("StoreCode");

                    b.Property<Guid>("SubscriptionId");

                    b.Property<string>("SubscriptionType");

                    b.Property<double?>("TaxOnTotalRetailPrice");

                    b.Property<double?>("TaxOnTotalVendorPrice");

                    b.Property<double?>("TaxOnTotalWholesalePrice");

                    b.Property<decimal?>("TaxRateCOFINS");

                    b.Property<decimal?>("TaxRateISS");

                    b.Property<decimal?>("TaxRatePIS");

                    b.Property<int?>("TermDuration");

                    b.Property<DateTime?>("TermEndDate");

                    b.Property<DateTime?>("TermStartDate");

                    b.Property<decimal?>("TotalInvoicePrice");

                    b.Property<double?>("TotalRetailPrice");

                    b.Property<decimal?>("TotalRetailPriceDiscountAmount");

                    b.Property<decimal?>("TotalTaxCOFINS");

                    b.Property<decimal?>("TotalTaxISS");

                    b.Property<decimal?>("TotalTaxPIS");

                    b.Property<double?>("TotalVendorPrice");

                    b.Property<double?>("TotalWholesalePrice");

                    b.Property<double?>("TotalWholesalePriceDiscountAmount");

                    b.Property<string>("UnitOfMeasure");

                    b.Property<string>("UsageAttributes");

                    b.Property<string>("UserAccountStatus");

                    b.Property<string>("VendorCurrency");

                    b.Property<string>("VendorName");

                    b.Property<double?>("VendorUnitPrice");

                    b.Property<double?>("WholesalePriceDiscount");

                    b.Property<double?>("WholesaleUnitPrice");

                    b.HasKey("Id");

                    b.ToTable("BillFeed","JsdnBill");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.BillFeedSplit.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("AccountCreationDate");

                    b.Property<string>("AdabasCode");

                    b.Property<string>("BillingCity");

                    b.Property<string>("BillingComplement");

                    b.Property<string>("BillingCountry");

                    b.Property<string>("BillingCountryCode");

                    b.Property<string>("BillingNeighbourhood");

                    b.Property<string>("BillingNumber");

                    b.Property<string>("BillingPhoneNumber");

                    b.Property<string>("BillingStateOrProvince");

                    b.Property<string>("BillingStreet");

                    b.Property<string>("BillingZIPcode");

                    b.Property<string>("CnpjMarketPlace");

                    b.Property<string>("CompanyName");

                    b.Property<string>("CompanyNameMarketPlace");

                    b.Property<string>("CpfUserHasMadeCredit");

                    b.Property<string>("CustomerAcronym");

                    b.Property<string>("CustomerCNPJ");

                    b.Property<string>("CustomerCPF");

                    b.Property<string>("CustomerCode");

                    b.Property<string>("CustomerEmailAddress");

                    b.Property<string>("CustomerPhoneNumber");

                    b.Property<string>("CustomerStateRegistration");

                    b.Property<string>("FirstName");

                    b.Property<string>("IndividualInvoice")
                        .HasMaxLength(1);

                    b.Property<string>("InvoiceNumber");

                    b.Property<string>("LastName");

                    b.Property<string>("MailingCity");

                    b.Property<string>("MailingComplement");

                    b.Property<string>("MailingCountry");

                    b.Property<string>("MailingCountryCode");

                    b.Property<string>("MailingNeighbourhood");

                    b.Property<string>("MailingNumber");

                    b.Property<string>("MailingPhoneNumber");

                    b.Property<string>("MailingStateOrProvince");

                    b.Property<string>("MailingStreet");

                    b.Property<string>("MailingZIPcode");

                    b.Property<string>("OpportunityId");

                    b.Property<string>("ProposalNumber");

                    b.Property<string>("QuoteId");

                    b.Property<string>("Segment");

                    b.Property<string>("UserAccountStatus");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceNumber")
                        .IsUnique();

                    b.ToTable("Customer","JsdnBill");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.BillFeedSplit.Invoice", b =>
                {
                    b.Property<string>("InvoiceNumber")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AffiliateCode")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("BillFrom");

                    b.Property<DateTime?>("BillTo");

                    b.Property<string>("CityHallServiceDescription")
                        .HasMaxLength(150);

                    b.Property<string>("CityServiceCode")
                        .HasMaxLength(10);

                    b.Property<string>("CompanyCode")
                        .HasMaxLength(10);

                    b.Property<string>("CustomerTransactionCurrency");

                    b.Property<DateTime?>("CycleCode");

                    b.Property<Guid>("IdFile");

                    b.Property<DateTime?>("InvoiceCreationDate");

                    b.Property<string>("InvoiceStatus");

                    b.Property<string>("Marketplace");

                    b.Property<string>("MarketplaceCity");

                    b.Property<string>("MarketplaceState");

                    b.Property<string>("MunicipalTaxpayerRegistration");

                    b.Property<string>("OrderId");

                    b.Property<string>("PaymentMethod");

                    b.Property<string>("PaymentStatus");

                    b.Property<string>("Premeditateddefaulter");

                    b.Property<string>("RefundAmount");

                    b.Property<string>("RefundType");

                    b.Property<string>("ResellerContactName");

                    b.Property<string>("ResellerEmailAddress");

                    b.Property<string>("ResellerName");

                    b.Property<string>("ResellerPhoneNumber");

                    b.Property<string>("SpecialProcedureNumber")
                        .HasMaxLength(150);

                    b.Property<string>("StoreCode");

                    b.Property<decimal?>("TotalInvoicePrice");

                    b.HasKey("InvoiceNumber");

                    b.HasIndex("IdFile");

                    b.ToTable("Invoice","JsdnBill");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.BillFeedSplit.ServiceInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AcquirerEntity")
                        .HasMaxLength(4);

                    b.Property<DateTime?>("ActivationDate");

                    b.Property<string>("Activity");

                    b.Property<string>("BillingCycle");

                    b.Property<string>("ChargeType");

                    b.Property<string>("CommentsCredited");

                    b.Property<DateTime?>("CycleReference");

                    b.Property<DateTime?>("DueDate");

                    b.Property<string>("FinancialStatus");

                    b.Property<double?>("GrandTotalRetailPrice");

                    b.Property<double?>("GrandTotalVendorPrice");

                    b.Property<double?>("GrandTotalWholesalePrice");

                    b.Property<decimal?>("GrossRetailPrice");

                    b.Property<double?>("GrossWholesalePrice");

                    b.Property<string>("InvoiceNumber");

                    b.Property<DateTime?>("NextRenewalDate");

                    b.Property<string>("OfferCode");

                    b.Property<string>("OfferName");

                    b.Property<DateTime?>("OrderCreationDate");

                    b.Property<double?>("ProRateScale");

                    b.Property<double?>("ProRatedRetailPriceUnitPrice");

                    b.Property<double?>("ProRatedRetailUnitDiscountedPriceAmount");

                    b.Property<double?>("ProRatedVendorUnitPrice");

                    b.Property<double?>("ProRatedWholesaleUnitDiscountedPriceAmount");

                    b.Property<double?>("ProRatedWholesaleUnitPrice");

                    b.Property<string>("PromotionCode");

                    b.Property<string>("PromotionDuration");

                    b.Property<string>("ProrateOnCancellation");

                    b.Property<string>("ProrateType");

                    b.Property<DateTime?>("PurchaseDate");

                    b.Property<double?>("Qty");

                    b.Property<string>("Receivable");

                    b.Property<string>("ResourceId");

                    b.Property<double?>("RetailPriceDiscount");

                    b.Property<double?>("RetailUnitPrice");

                    b.Property<string>("SalesReferenceCode");

                    b.Property<Guid>("Sequence");

                    b.Property<string>("ServiceCancellationDate");

                    b.Property<string>("ServiceCode");

                    b.Property<string>("ServiceName");

                    b.Property<string>("ServiceType");

                    b.Property<Guid>("SubscriptionId");

                    b.Property<string>("SubscriptionType");

                    b.Property<double?>("TaxOnTotalRetailPrice");

                    b.Property<double?>("TaxOnTotalVendorPrice");

                    b.Property<double?>("TaxOnTotalWholesalePrice");

                    b.Property<decimal?>("TaxRateCOFINS");

                    b.Property<decimal?>("TaxRateISS");

                    b.Property<decimal?>("TaxRatePIS");

                    b.Property<int?>("TermDuration");

                    b.Property<DateTime?>("TermEndDate");

                    b.Property<DateTime?>("TermStartDate");

                    b.Property<double?>("TotalRetailPrice");

                    b.Property<decimal?>("TotalRetailPriceDiscountAmount");

                    b.Property<decimal?>("TotalTaxCOFINS");

                    b.Property<decimal?>("TotalTaxISS");

                    b.Property<decimal?>("TotalTaxPIS");

                    b.Property<double?>("TotalVendorPrice");

                    b.Property<double?>("TotalWholesalePrice");

                    b.Property<double?>("TotalWholesalePriceDiscountAmount");

                    b.Property<string>("TransactionDate")
                        .HasMaxLength(8);

                    b.Property<string>("UnitOfMeasure");

                    b.Property<string>("UsageAttributes");

                    b.Property<string>("VendorCurrency");

                    b.Property<string>("VendorName");

                    b.Property<double?>("VendorUnitPrice");

                    b.Property<double?>("WholesalePriceDiscount");

                    b.Property<double?>("WholesaleUnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceNumber");

                    b.ToTable("ServiceInvoice","JsdnBill");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CycleDate");

                    b.Property<string>("FileName")
                        .IsRequired();

                    b.Property<Guid?>("IdParent");

                    b.Property<DateTime>("InclusionDate");

                    b.Property<int>("Status");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("File","JsdnBill");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.FinancialAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BoletoRetificadoCred");

                    b.Property<string>("BoletoRetificadoDeb");

                    b.Property<string>("CompensacaoAJU");

                    b.Property<string>("ContaContabilAjusteCompetenciaCred")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("ContaContabilAjusteCompetenciaDeb")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("ContaContabilContestacaoCred");

                    b.Property<string>("ContaContabilContestacaoDeb");

                    b.Property<string>("ContaContabilEstimativaCicloCred")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("ContaContabilEstimativaCicloDeb")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("ContaContabilFATCred");

                    b.Property<string>("ContaContabilFATDeb");

                    b.Property<string>("ContaContabilIMPCRED");

                    b.Property<string>("ContaContabilIMPDEB");

                    b.Property<string>("ContaFuturaAJUCred");

                    b.Property<string>("ContaFuturaAJUDeb");

                    b.Property<string>("DescontoFAT")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("FaturamentoAJU")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("FaturamentoFAT")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("ServiceCode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ServiceCodeName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ServiceCode");

                    b.ToTable("FinancialAccount","JsdnBill");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.FinancialAccountDate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BoletoRetificadoCred");

                    b.Property<string>("BoletoRetificadoDeb");

                    b.Property<string>("CompensacaoAJU");

                    b.Property<string>("ContaContabilAjusteCompetenciaCred")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("ContaContabilAjusteCompetenciaDeb")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("ContaContabilContestacaoCred");

                    b.Property<string>("ContaContabilContestacaoDeb");

                    b.Property<string>("ContaContabilEstimativaCicloCred")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("ContaContabilEstimativaCicloDeb")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("ContaContabilFATCred");

                    b.Property<string>("ContaContabilFATDeb");

                    b.Property<string>("ContaContabilIMPCRED");

                    b.Property<string>("ContaContabilIMPDEB");

                    b.Property<string>("ContaFuturaAJUCred");

                    b.Property<string>("ContaFuturaAJUDeb");

                    b.Property<DateTime?>("DateIncluded");

                    b.Property<string>("DescontoFAT")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("FaturamentoAJU")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("FaturamentoFAT")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<Guid>("IdFinancialAccount");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("LastUpdateDate");

                    b.Property<string>("ServiceCode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("FinancialAccountDate","JsdnBill");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateLog");

                    b.Property<Guid?>("FileId");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("StackTrace")
                        .HasMaxLength(2000);

                    b.Property<int>("TypeLog");

                    b.Property<string>("UserId")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("Log","JsdnBill");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.LogDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Line")
                        .HasMaxLength(20);

                    b.Property<Guid?>("LogId");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.HasIndex("LogId");

                    b.ToTable("LogDetail","JsdnBill");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.ManagementFinancialAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("ManagementFinancialAccount","JsdnBill");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.Pay.Critical", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BankCode")
                        .IsRequired();

                    b.Property<Guid>("IdFile");

                    b.Property<DateTime>("InclusionDate");

                    b.Property<decimal>("InvoiceAmount");

                    b.Property<DateTime>("RegisterDate");

                    b.HasKey("Id");

                    b.HasIndex("IdFile");

                    b.ToTable("Critical","JsdnBill");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.PaymentFeedDoc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateProcessing");

                    b.Property<string>("DateTimePayment");

                    b.Property<string>("DateTimeSIA");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<Guid>("IdFile");

                    b.Property<string>("InvoiceNumberJsdn");

                    b.Property<int>("PaymentMethod");

                    b.Property<decimal?>("TransactionAmount");

                    b.Property<DateTime?>("TransactionDate");

                    b.HasKey("Id");

                    b.ToTable("PaymentFeed","JsdnBill");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PaymentFeedDoc");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ReturnNF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChaveNF")
                        .IsRequired();

                    b.Property<DateTime>("DataEmissaoNF");

                    b.Property<Guid>("FileId");

                    b.Property<string>("InvoiceID")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NFCancelada")
                        .IsRequired();

                    b.Property<string>("NumeroNF")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("SerieNF")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("ValorTotalDescontoNF");

                    b.Property<decimal>("ValorTotalNF");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceID");

                    b.ToTable("ReturnNF","JsdnBill");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.PaymentBoleto", b =>
                {
                    b.HasBaseType("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.PaymentFeedDoc");

                    b.Property<string>("CicloFaturamento")
                        .IsRequired();

                    b.Property<int>("CodigoBanco");

                    b.Property<string>("CodigoBarras")
                        .IsRequired();

                    b.Property<string>("CodigoConvenio")
                        .IsRequired();

                    b.Property<DateTime>("DataVencimento");

                    b.Property<int>("Item");

                    b.Property<int>("NSA");

                    b.Property<string>("NomeBanco")
                        .IsRequired();

                    b.Property<string>("UF")
                        .IsRequired();

                    b.Property<decimal>("ValorRecebido");

                    b.HasIndex("InvoiceNumberJsdn");

                    b.ToTable("PaymentBoleto","JsdnBill");

                    b.HasDiscriminator().HasValue("PaymentBoleto");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.PaymentCreditCard", b =>
                {
                    b.HasBaseType("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.PaymentFeedDoc");

                    b.Property<string>("Acquirer");

                    b.Property<string>("AcquirerEntity")
                        .HasMaxLength(4);

                    b.Property<string>("AcquirerTransactionID")
                        .HasMaxLength(40);

                    b.Property<decimal?>("AlternativeAmount");

                    b.Property<int?>("AlternativeCurrency");

                    b.Property<string>("AuthorizationCode");

                    b.Property<string>("AuthorizationID")
                        .HasMaxLength(6);

                    b.Property<int?>("BankIdentificationNumber");

                    b.Property<int?>("BatchID");

                    b.Property<int?>("CardBrand");

                    b.Property<int?>("CardCategory");

                    b.Property<string>("CardExpirationDate")
                        .HasMaxLength(4);

                    b.Property<string>("CardIssuer")
                        .HasMaxLength(4);

                    b.Property<int?>("CardIssuerCountry");

                    b.Property<string>("CardLabel");

                    b.Property<string>("CardPan")
                        .HasMaxLength(19);

                    b.Property<string>("CardType")
                        .HasMaxLength(1);

                    b.Property<string>("CreditCard");

                    b.Property<string>("CreditCardNSU");

                    b.Property<string>("Currency");

                    b.Property<string>("CustomerEmail")
                        .HasMaxLength(60);

                    b.Property<string>("DataPrint")
                        .HasMaxLength(999);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long?>("ExtendedSIAOperationNumber");

                    b.Property<int?>("GracePeriod");

                    b.Property<int?>("InstallmentsNumber");

                    b.Property<decimal?>("InterestAmount");

                    b.Property<int?>("MerchantCurrency");

                    b.Property<string>("MerchantId")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("MerchantSession")
                        .HasMaxLength(10);

                    b.Property<string>("OrderId")
                        .HasMaxLength(20);

                    b.Property<string>("OriginIPAddress")
                        .HasMaxLength(40);

                    b.Property<string>("PaymentDate");

                    b.Property<decimal?>("PaymentValue");

                    b.Property<string>("PlanType")
                        .HasMaxLength(2);

                    b.Property<string>("ProcessCode");

                    b.Property<int>("ResultCode");

                    b.Property<int?>("SIAOperationNumber");

                    b.Property<int?>("ServiceId");

                    b.Property<string>("TerminalId")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("TypeOperation")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("UrlAuthPath");

                    b.Property<string>("UrlPuce");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("VersionId")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.HasIndex("InvoiceNumberJsdn")
                        .HasName("IX_PaymentFeed_InvoiceNumberJsdn1");

                    b.ToTable("PaymentCreditCard","JsdnBill");

                    b.HasDiscriminator().HasValue("PaymentCreditCard");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.BillFeedSplit.Customer", b =>
                {
                    b.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.BillFeedSplit.Invoice", "Invoice")
                        .WithOne("Customer")
                        .HasForeignKey("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.BillFeedSplit.Customer", "InvoiceNumber");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.BillFeedSplit.Invoice", b =>
                {
                    b.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.File", "File")
                        .WithMany()
                        .HasForeignKey("IdFile")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.BillFeedSplit.ServiceInvoice", b =>
                {
                    b.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.BillFeedSplit.Invoice", "Invoice")
                        .WithMany("Services")
                        .HasForeignKey("InvoiceNumber");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.Log", b =>
                {
                    b.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.File")
                        .WithMany("Logs")
                        .HasForeignKey("FileId");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.LogDetail", b =>
                {
                    b.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.Log")
                        .WithMany("LogDetails")
                        .HasForeignKey("LogId");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.ManagementFinancialAccount", b =>
                {
                    b.OwnsOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.ARR", "ARR", b1 =>
                        {
                            b1.Property<Guid>("ManagementFinancialAccountId");

                            b1.HasKey("ManagementFinancialAccountId");

                            b1.ToTable("ManagementFinancialAccount","JsdnBill");

                            b1.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.ManagementFinancialAccount")
                                .WithOne("ARR")
                                .HasForeignKey("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.ARR", "ManagementFinancialAccountId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.Boleto", "Boleto", b2 =>
                                {
                                    b2.Property<Guid>("ARRManagementFinancialAccountId");

                                    b2.Property<string>("FinancialAccount")
                                        .IsRequired()
                                        .HasColumnName("FinancialAccountBoleto")
                                        .HasColumnType("varchar(15)");

                                    b2.HasKey("ARRManagementFinancialAccountId");

                                    b2.ToTable("ManagementFinancialAccount","JsdnBill");

                                    b2.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.ARR")
                                        .WithOne("Boleto")
                                        .HasForeignKey("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.Boleto", "ARRManagementFinancialAccountId")
                                        .OnDelete(DeleteBehavior.Cascade);

                                    b2.OwnsOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.AccountingAccount", "AccountingAccount", b3 =>
                                        {
                                            b3.Property<Guid>("BoletoARRManagementFinancialAccountId");

                                            b3.Property<string>("Credit")
                                                .IsRequired()
                                                .HasColumnName("AccountingAccountBoletoCredit")
                                                .HasColumnType("varchar(15)");

                                            b3.Property<string>("Debit")
                                                .IsRequired()
                                                .HasColumnName("AccountingAccountBoletoDebit")
                                                .HasColumnType("varchar(15)");

                                            b3.HasKey("BoletoARRManagementFinancialAccountId");

                                            b3.ToTable("ManagementFinancialAccount","JsdnBill");

                                            b3.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.Boleto")
                                                .WithOne("AccountingAccount")
                                                .HasForeignKey("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.AccountingAccount", "BoletoARRManagementFinancialAccountId")
                                                .OnDelete(DeleteBehavior.Cascade);
                                        });
                                });

                            b1.OwnsOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.CreditCard", "CreditCard", b2 =>
                                {
                                    b2.Property<Guid>("ARRManagementFinancialAccountId");

                                    b2.Property<string>("FinancialAccount")
                                        .IsRequired()
                                        .HasColumnName("FinancialAccountCreditCard")
                                        .HasColumnType("varchar(15)");

                                    b2.HasKey("ARRManagementFinancialAccountId");

                                    b2.ToTable("ManagementFinancialAccount","JsdnBill");

                                    b2.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.ARR")
                                        .WithOne("CreditCard")
                                        .HasForeignKey("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.CreditCard", "ARRManagementFinancialAccountId")
                                        .OnDelete(DeleteBehavior.Cascade);

                                    b2.OwnsOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.AccountingAccount", "AccountingAccount", b3 =>
                                        {
                                            b3.Property<Guid>("CreditCardARRManagementFinancialAccountId");

                                            b3.Property<string>("Credit")
                                                .IsRequired()
                                                .HasColumnName("AccountingAccountCreditCardCredit")
                                                .HasColumnType("varchar(15)");

                                            b3.Property<string>("Debit")
                                                .IsRequired()
                                                .HasColumnName("AccountingAccountCreditCardDebit")
                                                .HasColumnType("varchar(15)");

                                            b3.HasKey("CreditCardARRManagementFinancialAccountId");

                                            b3.ToTable("ManagementFinancialAccount","JsdnBill");

                                            b3.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.CreditCard")
                                                .WithOne("AccountingAccount")
                                                .HasForeignKey("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.AccountingAccount", "CreditCardARRManagementFinancialAccountId")
                                                .OnDelete(DeleteBehavior.Cascade);
                                        });
                                });
                        });

                    b.OwnsOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.Critic", "Critic", b1 =>
                        {
                            b1.Property<Guid>("ManagementFinancialAccountId");

                            b1.Property<string>("FinancialAccount")
                                .IsRequired()
                                .HasColumnName("FinancialAccountCritic")
                                .HasColumnType("varchar(15)");

                            b1.HasKey("ManagementFinancialAccountId");

                            b1.ToTable("ManagementFinancialAccount","JsdnBill");

                            b1.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.ManagementFinancialAccount")
                                .WithOne("Critic")
                                .HasForeignKey("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.Critic", "ManagementFinancialAccountId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.AccountingAccount", "AccountingAccount", b2 =>
                                {
                                    b2.Property<Guid>("CriticManagementFinancialAccountId");

                                    b2.Property<string>("Credit")
                                        .IsRequired()
                                        .HasColumnName("AccountingAccountCriticCredit")
                                        .HasColumnType("varchar(15)");

                                    b2.Property<string>("Debit")
                                        .IsRequired()
                                        .HasColumnName("AccountingAccountCriticDebit")
                                        .HasColumnType("varchar(15)");

                                    b2.HasKey("CriticManagementFinancialAccountId");

                                    b2.ToTable("ManagementFinancialAccount","JsdnBill");

                                    b2.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.Critic")
                                        .WithOne("AccountingAccount")
                                        .HasForeignKey("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.AccountingAccount", "CriticManagementFinancialAccountId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });

                    b.OwnsOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.Transfer", "Transfer", b1 =>
                        {
                            b1.Property<Guid>("ManagementFinancialAccountId");

                            b1.Property<string>("FinancialAccount")
                                .IsRequired()
                                .HasColumnName("FinancialAccountTransferred")
                                .HasColumnType("varchar(15)");

                            b1.HasKey("ManagementFinancialAccountId");

                            b1.ToTable("ManagementFinancialAccount","JsdnBill");

                            b1.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.ManagementFinancialAccount")
                                .WithOne("Transfer")
                                .HasForeignKey("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.Transfer", "ManagementFinancialAccountId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.AccountingAccount", "AccountingAccount", b2 =>
                                {
                                    b2.Property<Guid>("TransferManagementFinancialAccountId");

                                    b2.Property<string>("Credit")
                                        .IsRequired()
                                        .HasColumnName("AccountingAccountTransferCredit")
                                        .HasColumnType("varchar(15)");

                                    b2.Property<string>("Debit")
                                        .IsRequired()
                                        .HasColumnName("AccountingAccountTransferDebit")
                                        .HasColumnType("varchar(15)");

                                    b2.HasKey("TransferManagementFinancialAccountId");

                                    b2.ToTable("ManagementFinancialAccount","JsdnBill");

                                    b2.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.Transfer")
                                        .WithOne("AccountingAccount")
                                        .HasForeignKey("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.AccountingAccount", "TransferManagementFinancialAccountId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });

                    b.OwnsOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.Unassigned", "Unassigned", b1 =>
                        {
                            b1.Property<Guid>("ManagementFinancialAccountId");

                            b1.Property<string>("FinancialAccount")
                                .IsRequired()
                                .HasColumnName("FinancialAccountUnassigned")
                                .HasColumnType("varchar(15)");

                            b1.HasKey("ManagementFinancialAccountId");

                            b1.ToTable("ManagementFinancialAccount","JsdnBill");

                            b1.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.ManagementFinancialAccount")
                                .WithOne("Unassigned")
                                .HasForeignKey("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.Unassigned", "ManagementFinancialAccountId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.AccountingAccount", "AccountingAccount", b2 =>
                                {
                                    b2.Property<Guid>("UnassignedManagementFinancialAccountId");

                                    b2.Property<string>("Credit")
                                        .IsRequired()
                                        .HasColumnName("AccountingAccountUnassignedCredit")
                                        .HasColumnType("varchar(15)");

                                    b2.Property<string>("Debit")
                                        .IsRequired()
                                        .HasColumnName("AccountingAccountUnassignedDebit")
                                        .HasColumnType("varchar(15)");

                                    b2.HasKey("UnassignedManagementFinancialAccountId");

                                    b2.ToTable("ManagementFinancialAccount","JsdnBill");

                                    b2.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.Unassigned")
                                        .WithOne("AccountingAccount")
                                        .HasForeignKey("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.ManagementFinancialAccount.AccountingAccount", "UnassignedManagementFinancialAccountId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.Pay.Critical", b =>
                {
                    b.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.File", "File")
                        .WithMany("Criticals")
                        .HasForeignKey("IdFile")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.PaymentBoleto", b =>
                {
                    b.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.BillFeedSplit.Invoice", "Invoice")
                        .WithMany("PaymentFeedsBoleto")
                        .HasForeignKey("InvoiceNumberJsdn");
                });

            modelBuilder.Entity("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.PaymentCreditCard", b =>
                {
                    b.HasOne("Gcsb.Connect.SAP.Infrastructure.PostgresDataAccess.Entities.BillFeedSplit.Invoice", "Invoice")
                        .WithMany("PaymentFeedsCredit")
                        .HasForeignKey("InvoiceNumberJsdn")
                        .HasConstraintName("FK_PaymentFeed_Invoice_InvoiceNumberJsdn1");
                });
#pragma warning restore 612, 618
        }
    }
}
